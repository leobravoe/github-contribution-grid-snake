name: generate-snake

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: snake-${{ github.repository }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Gerar SVGs com Platane/snk
        uses: Platane/snk@v3
        with:
          github_user_name: leobravoe
          outputs: |
            dist/github-snake.svg
            dist/github-snake-dark.svg?palette=github-dark

      - name: Guardar artefatos temporariamente
        run: |
          rm -rf /tmp/snake-dist
          mkdir -p /tmp/snake-dist
          cp -R dist/* /tmp/snake-dist/

      - name: Publish to output branch using git worktree (as github-actions[bot])
        env:
          TZ: America/Sao_Paulo
        run: |
          set -e
          # identidade do bot (não conta no seu grid)
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          WORKTREE_DIR="/tmp/repo-output"
          # remove worktree antigo se existir (limpeza de runs anteriores)
          if [ -d "$WORKTREE_DIR" ]; then
            rm -rf "$WORKTREE_DIR"
          fi

          # Se o branch remoto 'output' existe, vamos usá-lo; caso contrário, criamos novo branch
          if git ls-remote --exit-code --heads origin output >/dev/null 2>&1; then
            echo "Branch origin/output existe — criando worktree a partir do remoto"
            git worktree add --checkout "$WORKTREE_DIR" origin/output
          else
            echo "Branch origin/output NÃO existe — criando worktree com novo branch 'output'"
            # usamos -B para criar e posicionar a branch no HEAD atual (ou vazio)
            git worktree add --checkout -B output "$WORKTREE_DIR"
          fi

          # Copiar artefatos para a worktree
          mkdir -p "$WORKTREE_DIR/dist"
          cp -R /tmp/snake-dist/* "$WORKTREE_DIR/dist/" || true

          # Commitar somente se houver mudanças
          cd "$WORKTREE_DIR"
          git add dist
          if git diff --cached --quiet; then
            echo "Sem mudanças para publicar."
            # remover worktree para limpeza (opcional)
            cd $GITHUB_WORKSPACE
            git worktree remove --force "$WORKTREE_DIR" || true
            exit 0
          fi

          git commit -m "chore: update snake artifacts [skip ci]"

          # Push usando force-with-lease para evitar sobrescrever se outro job avançou a branch
          git push --force-with-lease origin HEAD:output
          
          # remover worktree para limpeza
          cd $GITHUB_WORKSPACE
          git worktree remove --force "$WORKTREE_DIR" || true
